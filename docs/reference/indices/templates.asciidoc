[[索引模板]]
== 索引模板

定义索引模板将在创建新的索引时被自动引用，模板包括设置（settings）和映射（mappings）。一个简单的模式模板可以控制是否在索引被创建时引用这个模板。比如：

[source,js]
--------------------------------------------------
curl -XPUT localhost:9200/_template/template_1 -d '
{
    "template" : "te*",
    "settings" : {
        "number_of_shards" : 1
    },
    "mappings" : {
        "type1" : {
            "_source" : { "enabled" : false }
        }
    }
}
'
--------------------------------------------------

定义了一个名为template_1的模板，包含一个模板模式`te*`。设置和映射将被应用到所有的名字匹配`te*`的索引。

在一个索引模板中可能回包含别名如下：

[source,js]
--------------------------------------------------
curl -XPUT localhost:9200/_template/template_1 -d '
{
    "template" : "te*",
    "settings" : {
        "number_of_shards" : 1
    },
    "aliases" : {
        "alias1" : {},
        "alias2" : {
            "filter" : {
                "term" : {"user" : "kimchy" }
            },
            "routing" : "kimchy"
        },
        "{index}-alias" : {} <1>
    }
}
'
--------------------------------------------------

<1>  当索引创建时，在alias名中的`{index}` 占位符将被模板获取到的实际索引名替换。

[float]
[[delete]]
=== Deleting a Template

Index templates are identified by a name (in the above case
`template_1`) and can be deleted as well:

[source,js]
--------------------------------------------------
curl -XDELETE localhost:9200/_template/template_1
--------------------------------------------------

[float]
[[getting]]
=== GETting templates

Index templates are identified by a name (in the above case
`template_1`) and can be retrieved using the following:

[source,js]
--------------------------------------------------
curl -XGET localhost:9200/_template/template_1
--------------------------------------------------

You can also match several templates by using wildcards like:

[source,js]
--------------------------------------------------
curl -XGET localhost:9200/_template/temp*
curl -XGET localhost:9200/_template/template_1,template_2
--------------------------------------------------

To get list of all index templates you can run:

[source,js]
--------------------------------------------------
curl -XGET localhost:9200/_template/
--------------------------------------------------


[float]
[[indices-templates-exists]]
=== Templates exists

Used to check if the template exists or not. For example:

[source,js]
-----------------------------------------------
curl -XHEAD -i localhost:9200/_template/template_1
-----------------------------------------------

The HTTP status code indicates if the template with the given name
exists or not. A status code `200` means it exists, a `404` it does not.


[float]
[[multiple-templates]]
=== Multiple Template Matching

Multiple index templates can potentially match an index, in this case,
both the settings and mappings are merged into the final configuration
of the index. The order of the merging can be controlled using the
`order` parameter, with lower order being applied first, and higher
orders overriding them. For example:

[source,js]
--------------------------------------------------
curl -XPUT localhost:9200/_template/template_1 -d '
{
    "template" : "*",
    "order" : 0,
    "settings" : {
        "number_of_shards" : 1
    },
    "mappings" : {
        "type1" : {
            "_source" : { "enabled" : false }
        }
    }
}
'

curl -XPUT localhost:9200/_template/template_2 -d '
{
    "template" : "te*",
    "order" : 1,
    "settings" : {
        "number_of_shards" : 1
    },
    "mappings" : {
        "type1" : {
            "_source" : { "enabled" : true }
        }
    }
}
'
--------------------------------------------------

The above will disable storing the `_source` on all `type1` types, but
for indices of that start with `te*`, source will still be enabled.
Note, for mappings, the merging is "deep", meaning that specific
object/property based mappings can easily be added/overridden on higher
order templates, with lower order templates providing the basis.

[float]
[[config]]
=== Config

Index templates can also be placed within the config location
(`path.conf`) under the `templates` directory (note, make sure to place
them on all master eligible nodes). For example, a file called
`template_1.json` can be placed under `config/templates` and it will be
added if it matches an index. Here is a sample of the mentioned file:

[source,js]
--------------------------------------------------
{
    "template_1" : {
        "template" : "*",
        "settings" : {
            "index.number_of_shards" : 2
        },
        "mappings" : {
            "_default_" : {
                "_source" : {
                    "enabled" : false
                }
            },
            "type1" : {
                "_all" : {
                    "enabled" : false
                }
            }
        }
    }
}
--------------------------------------------------

*Please note that templates added this way will not appear in the `/_template/*` API request.*
